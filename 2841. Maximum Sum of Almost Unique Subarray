class Solution(object):
    def maxSum(self, nums, m, k):
        """
        :type nums: List[int]
        :type m: int
        :type k: int
        :rtype: int
        """
        count = {}   # normal dictionary
        window_sum = 0
        max_sum = 0
        left = 0

        for right in range(len(nums)):
            # add new element
            window_sum += nums[right]
            if nums[right] in count:
                count[nums[right]] += 1
            else:
                count[nums[right]] = 1

            # maintain window size = k
            if right - left + 1 > k:
                count[nums[left]] -= 1
                if count[nums[left]] == 0:
                    del count[nums[left]]
                window_sum -= nums[left]
                left += 1

            # check condition when window size == k
            if right - left + 1 == k and len(count) >= m:
                max_sum = max(max_sum, window_sum)

        return max_sum
